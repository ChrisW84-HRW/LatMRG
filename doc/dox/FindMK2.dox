/**
 * \page FindMK2 FindMK2
 *
 * This module contains the main program to search for a fixed number of
 * prime integers \f$m\f$ close to a power of 2 (such that \f$m < 2^e\f$),
 * and for which \f$r = (m^k-1)/(m-1)\f$ is also prime. We may also require
 * that \f$(m-1)/2\f$ be prime by setting the boolean variable `safe` to
 * `true`. (See class LatMRG::Primes for the basic method
 * called by the program.) \todo Why safe?
 *
 * This program is called `findmk2`. The program reads the search parameters
 * from a file. This data file must have
 * the extension `.dat`. To run the program, a combination of types and the name
 * of the data file must be given without extension on the command line, and the
 * results will be written in a file of the same name but with extension `.res`.
 * For example, if the data file is called `find.dat`, then the program is run
 * by calling
 *
 *      findmk2 <I,Z> find
 *
 * and the results will be written in file `find.res`.
 *
 * The data file must have the following format:
 *
 *      k
 *      e
 *      s
 *      safe

 * <center>
 * **Data file format for `findmk2`**
 * </center>
 *
 * The file must contain the following parameters in that order:
 *
 * <dl>
 * <dt>
 * `k` :
 * </dt>
 * <dd>
 * `<int>` the order of the MRG that you search an `m` for.
 * </dd>
 * <dt> `e` :</dt>
 * <dd>
 * `<int>` the `e` for which the program will search an \f$m < 2^e\f$.
 * </dd>
 * <dt> `s` :</dt>
 * <dd>
 * `<int>` the program will find the first \f$s\f$ values of \f$m\f$ closest to
 * \f$2^e\f$ and such that \f$m < 2^e\f$.
 * </dd>
 * <dt> `safe` :</dt>
 * <dd>
 * `<bool>` if `true`, only \f$m\f$ such that \f$(m-1)/2\f$ is prime are considered.
 * </dd>
 * </dl>
 */
